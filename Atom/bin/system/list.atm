(Size) (size) let
(Item) (item) let
(Join) (join) let

((split.list 'hugo') let (split.list) load size (split.size) let ((split.list) load split.size counter - item) split.size loop) (split) let

(load 0 item)(head 'load head of the list associated with the tos') let

((c) let (b) let (a) let (a) load (b) load (c) load (a) load islist if) (iflist) let

((c) let (b) let (a) let (a) load (b) load (c) load (a) load '(' = if) (iflparen) let
